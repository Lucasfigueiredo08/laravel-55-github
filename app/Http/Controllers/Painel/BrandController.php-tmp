<?php

namespace App\Http\Controllers\Painel;

use App\Http\Controllers\Controller;
use App\Http\Requests\BrandStoreUpdateFormRequest;
use App\Models\Brand;
use Illuminate\Http\Request;

class BrandController extends Controller {

	private $brand;

	protected $totalPage = 10;

	public function __construct(Brand $brand) {
		$this->brand = $brand;
	}

	public function index() {
		$title = 'Marcas de Aviões';

		$brands = $this->brand->paginate($this->totalPage);

		return view('painel.brands.index', compact('title', 'brands'));

	}

	/**
	 * Show the form for creating a new resource.
	 *
	 * @return \Illuminate\Http\Response
	 */
	public function create() {
		$title = 'Cadastrar Novo Avião';

		return view('painel.brands.create', compact('title'));
	}

	/**
	 * Store a newly created resource in storage.
	 *
	 * @param  \Illuminate\Http\Request  $request
	 * @return \Illuminate\Http\Response
	 */
	public function store(BrandStoreUpdateFormRequest $request) {
		$dataForm = $request->all();

		$insert = $this->brand->create($dataForm);

		if ($insert) {
			return redirect()->route('brands.index')->with('success', 'Cadastro realizado com sucesso!');
		} else {
			return redirect()->back()->with('error', 'Falha ao cadastrar!');
		}

	}

	/**
	 * Display the specified resource.
	 *
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function show($id) {
		$brand = $this->brand->find($id);

		if (!$brand) {
			return redirect()->back();
		}

		$title = "Detalhes da Marca: { $brand->name}";

		return view('painel.brands.show', compact('title', 'brand'));

	}

	/**
	 * Show the form for editing the specified resource.
	 *
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function edit($id) {
		$brand = $this->brand->find($id);

		if (!$brand) {
			return redirect()->back();
		}

		$title = "Editor Marca: { $brand->name}";

		return view('painel.brands.create-edit', compact('title', 'brand'));
	}

	/**
	 * Update the specified resource in storage.
	 *
	 * @param  \Illuminate\Http\Request  $request
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function update(BrandStoreUpdateFormRequest $request, $id) {
		$brand = $this->brand->find($id);

		if (!$brand) {
			return redirect()->back();
		}

		$update = $brand->update($request->all());

		if ($update) {
			return redirect()->route('brands.index')->with('success', 'Atualizado com sucesso!');
		} else {
			return redirect()->back()->with('error', 'Falha ao atualizar!');
		}

	}

	/**
	 * Remove the specified resource from storage.
	 *
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function destroy($id) {
		$brand = $this->brand->find($id);

		if (!$brand) {
			return redirect()->back();
		}

		if ($brand->delete()) {
			return redirect()
			->route('brands.index')
			->with('success', 'Deletado com sucesso!');
		} else {
			return redirect()
			->back()
			->with('error', 'Falha ao deletar!');
		}

	}

	public function search(Request $request) {
		$dataForm = $request->except('_token');

		$brands = $this->brand->search($request, $this->totalPage);

		$title = "Brands, filtros para: {$request->key_search}";

		return view('painel.brands.index', compact('title', 'brands', 'dataForm'));
	}
}
